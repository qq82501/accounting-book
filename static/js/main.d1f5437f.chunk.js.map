{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Filter/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpenseList","expenses","length","map","expense","id","ExpensesFilter","onChange","e","onGetFilteredYear","target","value","filteredYear","ChartBar","maxValue","label","barFillHeight","Math","round","style","height","Chart","dataPoints","max","dataPoint","ExpenseChart","chartDataPoints","forEach","expenseMonth","getMonth","Expenses","useState","setFilteredYear","filteredExpenses","filter","selectedYear","ExpenseForm","newTitle","setNewTitle","newAmount","setNewAmount","newDate","setNewDate","onSubmit","preventDefault","expenseData","Date","onGetNewExpense","onCancelAdding","type","min","step","onClick","NewExpense","isAddingExpense","setIsAddingExpense","newRawData","newExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","console","log","newExpense","prevState","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d1f5437f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const classes = `card ${props.className}`;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpenseList.css\";\r\n\r\nfunction ExpenseList(props) {\r\n  if (!props.expenses.length)\r\n    return (\r\n      <h2 className=\"expenses-list__fallback\">Cannot find expense item</h2>\r\n    );\r\n\r\n  if (props.expenses.length > 0) {\r\n    return (\r\n      <ul className=\"expenses-list\">\r\n        {props.expenses.map((expense) => (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const filterChangeHandler = function (e) {\r\n    props.onGetFilteredYear(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select onChange={filterChangeHandler} value={props.filteredYear}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ChartBar.css\";\r\nfunction ChartBar(props) {\r\n  const { value, maxValue, label } = props;\r\n\r\n  let barFillHeight = \"0%\"; //using String to feed to CSS Style\r\n\r\n  // if maxValue = 0, means there is no expense in this year.\r\n  if (maxValue > 0) {\r\n    barFillHeight = Math.round((value / maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{label}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nfunction Chart(props) {\r\n  const { dataPoints } = props;\r\n  const maxValue = Math.max(...dataPoints.map((dataPoint) => dataPoint.value));\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={maxValue}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nfunction ExpenseChart(props) {\r\n  const { expenses } = props;\r\n  const chartDataPoints = [\r\n    { label: \"JAN\", value: 0 },\r\n    { label: \"FEB\", value: 0 },\r\n    { label: \"MAR\", value: 0 },\r\n    { label: \"APR\", value: 0 },\r\n    { label: \"MAY\", value: 0 },\r\n    { label: \"JUN\", value: 0 },\r\n    { label: \"JUL\", value: 0 },\r\n    { label: \"AUG\", value: 0 },\r\n    { label: \"SEP\", value: 0 },\r\n    { label: \"OCT\", value: 0 },\r\n    { label: \"NOV\", value: 0 },\r\n    { label: \"DEC\", value: 0 },\r\n  ];\r\n\r\n  expenses.forEach((expense) => {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  });\r\n\r\n  return <div>{<Chart dataPoints={chartDataPoints} />}</div>;\r\n}\r\n\r\nexport default ExpenseChart;\r\n","import { useState } from \"react\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"../Filter/ExpensesFilter\";\r\nimport ExpenseChart from \"./ExpenseChart\";\r\nimport \"./Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n  const { expenses } = props;\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const getFilteredYear = function (selectedYear) {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = expenses.filter(\r\n    (expense) => expense.date.getFullYear() === +filteredYear\r\n  );\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        filteredYear={filteredYear}\r\n        onGetFilteredYear={getFilteredYear}\r\n      />\r\n      <ExpenseChart expenses={filteredExpenses} />\r\n      <ExpenseList expenses={filteredExpenses} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nfunction ExpenseForm(props) {\r\n  /////////////////////////////////////////\r\n  ///////////////STATE/////////////////////\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n  const [newAmount, setNewAmount] = useState(\"\");\r\n  const [newDate, setNewDate] = useState(\"\");\r\n\r\n  /////////////////////////////////////////\r\n  ///////////////Handler/////////////////////\r\n  const titleChangeHandler = function (e) {\r\n    setNewTitle(e.target.value);\r\n  };\r\n\r\n  const amoutChangeHandler = function (e) {\r\n    setNewAmount(e.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = function (e) {\r\n    setNewDate(e.target.value);\r\n  };\r\n\r\n  const expenseSubmitHandler = function (e) {\r\n    e.preventDefault();\r\n    const expenseData = {\r\n      title: newTitle,\r\n      amount: +newAmount,\r\n      date: new Date(newDate),\r\n    };\r\n    props.onGetNewExpense(expenseData);\r\n    setNewTitle(\"\");\r\n    setNewAmount(\"\");\r\n    setNewDate(\"\");\r\n    props.onCancelAdding();\r\n  };\r\n\r\n  ///////////////////////////////////////////\r\n  ///////////////Rendering Controll/////////////////////\r\n\r\n  return (\r\n    <form onSubmit={expenseSubmitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input onChange={titleChangeHandler} value={newTitle} type=\"text\" />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            onChange={amoutChangeHandler}\r\n            value={newAmount}\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            onChange={dateChangeHandler}\r\n            value={newDate}\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancelAdding}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nfunction NewExpense(props) {\r\n  //////////////////////////////////////////\r\n  ///////////////STATE/////////////////////\r\n  const [isAddingExpense, setIsAddingExpense] = useState(false);\r\n\r\n  //////////////////////////////////////////\r\n  ///////////////HANDLER/////////////////////\r\n  const getNewExpenseHandler = function (newRawData) {\r\n    const newExpenseData = {\r\n      id: Math.random(),\r\n      ...newRawData,\r\n    };\r\n    props.onAddExpense(newExpenseData);\r\n  };\r\n\r\n  const openAddingHandler = function (e) {\r\n    setIsAddingExpense(true);\r\n  };\r\n\r\n  const cancelAddingHandler = function (e) {\r\n    setIsAddingExpense(false);\r\n  };\r\n\r\n  //////////////////////////////////////////////////////\r\n  ///////////////Rendering Controll/////////////////////\r\n  if (!isAddingExpense)\r\n    return (\r\n      <div className=\"new-expense\">\r\n        <button type=\"button\" onClick={openAddingHandler}>\r\n          Add New Expense\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm\r\n        onGetNewExpense={getNewExpenseHandler}\r\n        onCancelAdding={cancelAddingHandler}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  console.log(expenses);\n  const addExpenseHandler = function (newExpense) {\n    setExpenses((prevState) => {\n      return [newExpense, ...prevState];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}